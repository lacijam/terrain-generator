#version 330
		
in vec3 v_pos;
in vec3 v_nor;

uniform vec3 object_colour;
uniform vec3 light_colour;
uniform vec3 light_pos;

out vec4 fragment;

void main()
{
    float dist = distance(light_pos, v_pos);
    float attenuation = 1.0f / (1.0f + 0.01 * dist + 0.0005 * dist * dist);
    vec3 light_dir = normalize(light_pos - v_pos);
    vec3 light_colour = vec3(1.0f, 0.1f, 0.1f);
    float diff = max(dot(v_nor, light_dir), 0.0f);
    vec3 diffuse = diff * light_colour * 10 * attenuation;
    float ambient_strength = 0.2f;
    vec3 ambient = ambient_strength * light_colour;
    fragment = vec4((ambient + diffuse) * object_colour, 1.0);
}